<style lang="less">
.index-list-main{
    position: relative; top: 0;width: 100%;overflow: hidden;
    .scroll-wrapping{
        width: 100%; height: 100%;
        .negative{
            background: #ffffff;width: 100%;height: 100rpx;
        }
        .scroll-view-item{
            width: 100%;background: #ffffff;
            .list-group-title{
                width: 100%;display: black;height: 78rpx;line-height: 78rpx;padding-left: 40rpx;font-size: 30rpx;color:#999;background: #f2f3f5;
            }
            .list-group-info{
                height:100rpx; font-size: 30rpx; color: #333333; margin: 0 40rpx;
                &.boder-b{
                    border-bottom: 1px solid #f0f0f0;
                }
                .icon{
                    display: inline-block;padding-right: 40rpx;
                }
            }
        }
    }
    .list-fixed{
        position: absolute;top: 0;left: 0; width: 100%;
        .fixed-title{
            height: 78rpx;line-height: 78rpx;padding-left: 40rpx;font-size: 30rpx;color: #999;background: #f2f3f5;
        }
    }
    .list-shortcut{
        position: absolute; z-index: 999; right: 20rpx;top:-30rpx; width: 40rpx; padding: 40rpx 0;border-radius: 20rpx;text-align: center;
        //top: 50%;
        //transform: translateY(-50%);
       /*  background: rgba(0, 0, 0, 0.3); */
        .item{
            padding: 6rpx;line-height: 1;color: #999;font-size: 26rpx;
            /* color: rgba(255, 255, 255, 0.5); */
            &.current{
                color: #ffcd32;
            }
        }
    }
}
</style>
<template>
    <view class="index-list-main" style="height:{{ wiHeight }}px;">
        <scroll-view class="scroll-wrapping" id="scroll-wrapping" scroll-y="true" scroll-into-view="{{toView}}" bindscroll="scroll">
            <repeat for="{{dataList}}" item="item" index="index" key="{{item.title}}" >
                <view id="{{item.title}}" class="scroll-view-item">
                    <view class="list-group-title">{{item.title}}</view>
                    <repeat for="{{item.items}}" key="index" index="subindex" item="subItem">
                        <view class="row list-group-info {{item.items.length-1 != subindex ? 'boder-b' : ''}} ">
                            <image class="icon-xl icon" src="{{subItem.avatar}}"/>
                            <text>{{subItem.name}}</text>
                        </view> 
                    </repeat>
                </view>
            </repeat>
            <view class="negative" style="height:{{ wiHeight/4 }}px;"></view>
        </scroll-view>
        <view class="list-fixed" hidden="{{fixedTitle === ''}}" style="transform:translatey({{fixedTop}}px)">
            <view class="fixed-title">{{fixedTitle}}</view>
        </view>
        <view class="list-shortcut">
            <view  wx:for="{{Map}}" wx:for-index="index" wx:for-item="item" wx:key="index" class="item {{currentIndex == index ? 'current' : ''}}" @tap="intoView({{item}},{{index}})">{{item}}</view>
        </view>
    </view>
</template>
<script>
import wepy from 'wepy';
export default class carList extends wepy.component {
    def = {
        wiHeight : 0,
        listTop:[],
        currentIndex : 0,
        y:0,
        diff:0,
        fixedTop:0,
        toView:'A',
        isClick:false,
        Map:(()=>{
            let temp = [];
            for(var i=0;i<26;i++) temp.push(String.fromCharCode(65+i));
            return temp;
        })(),
        dataList:(()=>{
            let code = [];
            for(var i=0;i<26;i++) code.push(String.fromCharCode(65+i));
            let temp = [];
            for(var i=0;i<26;i++) {
                temp.push(
                    {
                        title:code[i],
                        items:[
                            {avatar:'../images/tabbar/my-se.png',name:'奥迪'+code[i]},
                            {avatar:'../images/tabbar/my-se.png',name:'阿尔法罗密欧'+code[i]},
                            {avatar:'../images/tabbar/my-se.png',name:'阿斯顿马丁'+code[i]},
                            {avatar:'../images/tabbar/my-se.png',name:'ALPINA'+code[i]},
                        ]
                    }
                )
            }
            return temp;
        })()
    }
    props = {
        top:{
            type: Number,
            default: 0
        },
        bottom:{
            type: Number,
            default: 0
        }
    };
    data = {...this.def};
    computed = {
        fixedTitle(){
            if (this.y <= 0) {
                return '';
            }  
            return this.Map[this.currentIndex] ? this.Map[this.currentIndex] : '';
        },
    };
    watch = {
      diff (newValue) {
        let fixedTop = ( (newValue > 0 && newValue < 78) ? newValue - 78 : 0 ) / 2;
        if (this.fixedTop === fixedTop) return;
        this.fixedTop = fixedTop;
      }
    };
    methods = {
        scroll(e) {
           let scrollTop = e.detail.scrollTop;
           this.scrollY(scrollTop);
        },
        intoView(item,index){
            this.toView = item;
            this.currentIndex = index;
            this.isClick = true;
        }
    };
    scrollY(y){
        let listTop = this.listTop;
        let difference = 0;
        if(listTop[0]) difference = listTop[0]
        this.y = y;
        y = y+difference;
        // 当滚动到顶部，y < 0
        if (y < 0) {
          this.currentIndex = 0;
          return
        }
        for (let i = 0; i < listTop.length - 1; i++) {
          let top1 = listTop[i];
          let top2 = listTop[i + 1];
          if (y >= top1 && y < top2) {
            if(!this.isClick){
                this.currentIndex = i;
                this.diff  = top2 - y; 
            }
            this.isClick = false;
            return;
          }
        }
        // 当滚动到底部，且y大于最后一个元素的上限
        this.currentIndex = listTop.length - 2;
    };
    calculateTop(){
        let _this = this;
        let query = wx.createSelectorQuery();
        let items =  query.selectAll('#scroll-wrapping > .scroll-view-item');
        items.boundingClientRect((rects)=>{
            rects.forEach((rect)=>{
               _this.listTop.push(rect.top);
            });
            //_this.wiHeight = _this.wiHeight -  _this.listTop[0];
        }).exec();
    };
    onLoad (option) {
        this.getSystemInfo();
        setTimeout(() => {
            this.calculateTop();
        }, 500);
    };
    getSystemInfo(){
        let _this = this;
        wx.getSystemInfo({
            success(res) {
                console.log(res);
                _this.wiHeight = res.windowHeight;
            }
        })
    }
}
</script>

