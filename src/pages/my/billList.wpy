<style lang="less">
@import "../../less/variable.less";
.bill-main{
    position: relative; width: 100%;padding-bottom:102rpx;
    .filter{
        padding: 0 32rpx; height: 88rpx; line-height: 88rpx;
        .icon-filter{
            width: 16rpx;height: 10rpx; vertical-align: middle;
        }
    }
    .filter-item{
        position: absolute;z-index: 10;width: 100%;  background: @color-bg-body; line-height: 1;
        .list{
            padding:32rpx; background: #ffffff; min-height: 40%;
            .lable{width: 140rpx;height: 60rpx; line-height: 60rpx; text-align: center; border:1px solid #f0f0f0;border-radius: 30rpx;}
            .active{ border:1px solid #fc8d1a !important; color: #fc8d1a !important;}
        }
        .ft{
            width: 100%;height: 120rpx;
            .def{flex: 1; line-height: 120rpx;text-align: center;background: #ffffff;}
            .right{
                background: #fc8d1a;color: #ffffff;
            }
        }
    }
}
</style>

<template>
    <view class="bill-main"  wx:if="{{init}}">
        <view class="row-between filter fs-28 c-2"  catchtouchmove="moveFilter">
            <view class="row">
                <view class="row mr60" @tap="handleChange('filter')">
                    <view class="mr10 {{filterName == 'filter'?'c-fc8d1a':''}}">筛选</view>
                    <image class="icon-filter" src="{{filterName == 'filter'?icon.orange:icon.silver}}" mode="aspectFit" lazy-load="false"></image>
                </view>
                <view class="row" @tap="handleChange('type')">
                    <view class="mr10 {{filterName == 'type'?'c-fc8d1a':''}}">分类</view>
                    <image class="icon-filter" src="{{filterName == 'type'?icon.orange:icon.silver}}" mode="aspectFit" lazy-load="false"></image>
                </view>
            </view>
            <view @tap="seach">搜索</view>
        </view>
        <!-- 筛选项目  -->
        <view class="filter-item border-t-f0" style="height:{{wiHeight}}px" hidden="{{filterName == ''}}" catchtouchmove="moveFilter">
            <view class="list fs-28 c-2 clear">
                <block wx:for="{{filterTpye[filterName]}}" wx:key="index" wx:for-index="index" wx:for-item="item">
                    <view class="f-l mr60 mb20 lable {{item.isact ? 'active':''}}" @tap="selected({{index}})">{{item.name}}</view>
                </block>
            </view>
            <view class="row fs-36 ft border-t-f0">
                <view class="def c-6" hover-class="tap-active-de" hover-start-time="20" hover-stay-time="70" @tap="handleRest">重置</view>
                <view class="def right" hover-class="tap-active" hover-start-time="20" hover-stay-time="70" @tap="handleConfirm">确认</view>
            </view>
        </view>
        <!-- 结果集合 -->
        <userCentreBill/>
    </view>
</template>

<script>
import wepy from 'wepy';
import base from '@/mixins/base';
import userCentreBill from '@/components/userCentreBill';

export default class billList extends wepy.page {
    def = {
        init: false,
        icon:{
            orange:'../../images/icon/filter-orange.png',
            silver:'../../images/icon/filter-silver.png'
        },
        wiHeight:'0px',
        filterName:'',
        filterTpye:{
            filter:[
                {id:1,name:'充值',isact:false},
                {id:2,name:'套餐',isact:false},
                {id:3,name:'消费',isact:true}
            ],
            type:[
                {id:11,name:'洗车',isact:false},
                {id:12,name:'美容',isact:false},
                {id:13,name:'喷漆',isact:false},
                {id:14,name:'保养',isact:false}
            ]
        }
    }
    config={
        navigationBarTitleText: '账单'
    };
    data={...this.def};
    computed={
       
    };
    components={
        userCentreBill
    };
    methods={
        handleChange(name){
            this.filterName = name;
        },
        moveFilter(e){

        },
        seach(){
            this.$navigate('seachBill');
        },
        selected(index){
            let item = this.filterTpye[this.filterName][index];
            item.isact = !item.isact;
        },
        handleRest(){
            let items = this.filterTpye;
            for (var k in items){
                items[k].forEach((obj) => {
                    obj.isact = false;
                });
            }
        },
        handleConfirm(){
            let items = this.filterTpye;
            let selecteds = {};
            for (var k in items){
                selecteds[k] = items[k].filter((obj) => {
                    return obj.isact == true;
                });
            }
            console.log(selecteds);
            this.filterName = '';
        }
    };
    mixins = [base];
    async onLoad (options) {
        this.getWiHeight();
        this.loaded(); 
    };
    onShow(){
        const BillTime = wx.getStorageSync('BillTime');
        wx.removeStorageSync('BillTime');
        console.log('从缓存中获取时间：',BillTime);
    };
    getWiHeight(){
        let _this = this;
        wx.getSystemInfo({
            success(res) {
                _this.wiHeight = res.windowHeight;
            }
        })
    };
}
</script>